

----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:20:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (13 October 2021 15:21:02) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:21:02) CuisUniversity-4913.image priorSource: 18661997!

----QUIT----(13 October 2021 15:26:07) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:26:08) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:26:08) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (16 October 2021 13:43:47) as /home/alex/Downloads/linux64/CuisUniversity-4913.image!


----End fileIn of /home/alex/Downloads/linux64/Portfolio-Ejercicio.st----!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 13:45:48'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 13:46:47'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'Ch.A 10/16/2021 13:46:38'!
test01
	| portfolio |
	portfolio = Portfolio new.
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:46:58'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:47:18'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:48:02'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:48:19'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:48:22'!
ERROR!

	Portfolio new!

Portfolio new!

	Portfolio new balance!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 13:49:29' prior: 50915105!
test01
	| portfolio |
	portfolio = Portfolio new.
	self assert: 0 equals: (portfolio balance).
! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:49:33'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 13:50:25' prior: 50915125!
test01

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:50:28'!
ERROR!
!Portfolio methodsFor: 'Balance' stamp: 'Ch.A 10/16/2021 13:51:02'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'Balance' stamp: 'Ch.A 10/16/2021 13:51:06' prior: 50915142!
balance
	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:51:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 13:51:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 13:52:40'!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account1 Deposit: 100.
	self assert: 0 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 13:55:41' prior: 50915154!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account1 register: 100.
	self assert: 0 equals: (portfolio balance).
	! !

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 13:57:23' prior: 50915163!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account1 register: 100.
	self assert: 100 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 13:57:24'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 15:23:59' prior: 50915179!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:24:00'!
FAILURE!

portfolio balance!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 15:25:52'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'Balance' stamp: 'Ch.A 10/16/2021 15:25:59' prior: 50915146!
balance
	accounts isEmpty ifTrue: [^0]
	ifFalse:[^100].! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:26:04'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:26:04'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:26:10'!
ERROR!
!Portfolio methodsFor: 'Balance' stamp: 'Ch.A 10/16/2021 15:27:59'!
initialization
	accounts := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 15:30:05' overrides: 16896425!
initialize
	accounts := OrderedCollection new.! !

!methodRemoval: Portfolio #initialization stamp: 'Ch.A 10/16/2021 15:30:13'!
initialization
	accounts := OrderedCollection new.!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:30:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:30:26'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:30:26'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:30:26'!
FAILURE!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:30:32'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:30:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:30:32'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:30:32'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 15:31:34' prior: 50915190!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio addAccount: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:31:36'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 15:32:18'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 15:32:44' prior: 50915267!
addAccount: anAccount 
	accounts add: anAccount.! !

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:32:46'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:32:46'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:32:46'!
PASSED!

----QUIT----(16 October 2021 15:33:35) CuisUniversity-4913.image priorSource: 18661997!


----STARTUP---- (16 October 2021 15:33:41) as /home/alex/Downloads/linux64/CuisUniversity-4913.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 15:37:42'!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	self assert: 200 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:37:51'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:37:58'!
FAILURE!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:38:03'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:38:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:38:03'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:38:03'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 15:38:47' prior: 50915209!
balance
	accounts isEmpty ifTrue: [^0].
	accounts size = 1 ifTrue: [^100]
	ifFalse:[^200].! !

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:38:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 15:39:07'!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	portfolio addAccount: account3.
	self assert: 300 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:39:09'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 15:39:55' prior: 50915329!
balance
	^accounts sum: [:anAccount | anAccount balance].! !

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:39:56'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:39:56'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:39:56'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:39:56'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:39:56'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:39:56'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 15:41:05' prior: 50915357!
balance
	accounts isEmpty ifTrue:[^0].
	^accounts sum: [:anAccount | anAccount balance].! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:41:07'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:41:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:41:14'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:41:14'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:41:14'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:41:14'!
PASSED!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 15:48:07' prior: 50915376!
balance
	^accounts sum: [:anAccount | anAccount balance] 
		ifEmpty: [^0].! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 15:48:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 15:48:09'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 15:48:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 15:48:09'!
PASSED!

----QUIT----(16 October 2021 16:06:40) CuisUniversity-4913.image priorSource: 18676282!

----STARTUP---- (16 October 2021 18:13:45) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:16:40'!
test05
	
	| account portfolio |
	account := ReceptiveAccount new.
	Deposit register:100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self should: [portfolio add: account.]
	raise: Error
	withMessageText: Portfolio duplicateAccountErrorDescription.! !

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:16:47'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:17:16' prior: 50915255!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:17:27' prior: 50915291!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:17:36' prior: 50915337!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 18:17:44'!
add: anAccount 
	accounts add: anAccount.! !

!methodRemoval: Portfolio #addAccount: stamp: 'Ch.A 10/16/2021 18:17:44'!
addAccount: anAccount 
	accounts add: anAccount.!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:18:07'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:18:07'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:18:07'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:18:07'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:18:07'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:18:07'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:06'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:06'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:13'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:13'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:13'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:18'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:18'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:18'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:18'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:20'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:21'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:21'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:19:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:21'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:19:21'!
ERROR!

----STARTUP---- (16 October 2021 18:20:00) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:20:21' prior: 50915291!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:20:31' prior: 50915255!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:20:42' prior: 50915337!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:20:46'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:20:46'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:20:46'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:20:46'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 18:21:10'!
add: anAccount 
	accounts add: anAccount.! !

!methodRemoval: Portfolio #addAccount: stamp: 'Ch.A 10/16/2021 18:21:10'!
addAccount: anAccount 
	accounts add: anAccount.!



----STARTUP---- (16 October 2021 18:26:34) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!


----End fileIn of /home/alex/Downloads/linux64-Portfolio/Portfolio-Ejercicio.st----!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:27:41'!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicateAccountErrorDescription.! !

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:27:43'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/16/2021 18:27:59'!
duplicateAccountErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/16/2021 18:28:08' prior: 50915185!
duplicateAccountErrorDescription
	^'Account is duplicate'.! !

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:28:09'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 18:29:08' prior: 50915125!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.! !

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:29:11'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:29:40'!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent addPortfolio: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:29:42'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 18:29:55'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 18:30:49'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 18:30:47' prior: 50915237!
addPortfolio: aPortfolio 
	childrenPortfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:30:52'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 18:31:49' prior: 50915120 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	childrenPortfolios := OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:31:51'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:31:51'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:31:51'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:31:51'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:31:51'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:31:51'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:31:51'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 18:34:59' prior: 50915114!
balance
	|res|
	
	res := accounts sum: [:anAccount | anAccount balance] 
		ifEmpty: [^0].
	
	res := res + (childrenPortfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [^0]).
	
	^res.! !

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:35:00'!
FAILURE!

portfolioChild balance!

portfolioParent balance!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:36:26'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:37:22'!
FAILURE!

portfolio balance!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:38:38'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 18:40:04' prior: 50915282!
balance
	|res|
	
	res := accounts sum: [:anAccount | anAccount balance] 
		ifEmpty: [0].
	
	res := res + (childrenPortfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).
	
	^res.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:40:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:42:17'!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:42:22'!
ERROR!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:42:50'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:43:54' prior: 50915357!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone:[^false].
	^true.! !

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:43:55'!
PASSED!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:48:43'!
test08

	|rootPortfolio childPortfolio account1 account2 transaction1 transaction2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	rootPortfolio add: account1.
	childPortfolio add: account2 .
	
	self assert: (rootPortfolio hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (rootPortfolio hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !

!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:50:40' prior: 50915362!
hasRegistered: aTransaction

	^true.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:50:44'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 18:50:44'!
FAILURE!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 18:50:44'!
FAILURE!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:51:12' prior: 50915434!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone:[^false].
	^true.! !

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 18:51:13'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:56:08'!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).! !

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 18:56:08'!
ERROR!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:56:20'!
has: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:56:36' prior: 50915483!
has: aReceptiveAccount 
	^true.! !

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 18:56:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 18:56:53'!
test10

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 addPortfolio: childPortfolio .
	rootPortfolio2 addPortfolio: childPortfolio .
	
	self assert: (rootPortfolio1 hasPortfolio: childPortfolio ).
	self assert: (rootPortfolio2 hasPortfolio: childPortfolio ).! !

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 18:56:57'!
ERROR!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:57:03'!
hasPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 18:57:11' prior: 50915533!
hasPortfolio: aPortfolio 
	^true.! !

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 18:57:12'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:00:27'!
test11

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio addPortfolio: portfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:00:29'!
ERROR!
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/16/2021 19:00:48'!
cantAddPortfolioErrorDescription
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/16/2021 19:01:01' prior: 50915580!
cantAddPortfolioErrorDescription
	^'Porfolio cant be added'.! !

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:01:03'!
FAILURE!

	self 
	should: [portfolio addPortfolio: portfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		!

	self 
	should: [portfolio addPortfolio: portfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		!

portfolio addPortfolio: portfolio!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:03:53'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:05:24' prior: 50915251!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios add: aPortfolio .! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:05:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:12:13'!
test12

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio addPortfolio: childPortfolio.
	self 
	should: [rootPortfolio addPortfolio: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:12:13'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:12:34'!
FAILURE!

rootPortfolio addPortfolio: childPortfolio!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:13:39' prior: 50915605!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios add: aPortfolio .! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:13:41'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:13:41'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:13:41'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:13:41'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:05:24' prior: 50915658!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios add: aPortfolio .! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:14:35'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:14:35'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:14:35'!
FAILURE!


!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:16:42'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 19:16:42'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:16:42'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:17:27' prior: 50915699!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios add: aPortfolio .! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 19:18:21' prior: 50915538!
hasPortfolio: aPortfolio 
	childrenPortfolios detect: [:portfolio | portfolio = aPortfolio  ] ifNone: [^false].
	^true.! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 19:18:46' prior: 50915488!
has: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.! !
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 19:19:34'!
hasAccount: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:34' prior: 50915469!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 hasAccount: account).
	self assert: (portfolio2 hasAccount: account).! !

!methodRemoval: Portfolio #has: stamp: 'Ch.A 10/16/2021 19:19:34'!
has: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:19:55'!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915198!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915344!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio addAccount: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915388!
test08

	|rootPortfolio childPortfolio account1 account2 transaction1 transaction2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	rootPortfolio addAccount: account1.
	childPortfolio addAccount: account2 .
	
	self assert: (rootPortfolio hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (rootPortfolio hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915148!
register: aTransaction

	transactions addAccount: aTransaction 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915884!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	
	self assert: (portfolio1 hasAccount: account).
	self assert: (portfolio2 hasAccount: account).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50914863!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio addAccount: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50914886!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	portfolio addAccount: account3.
	self assert: 300 equals: (portfolio balance).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915853!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios addAccount: aPortfolio .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915171!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addAccount: account.
	
	self 
	should: [portfolio addAccount: account.]
	raise: Error 
	withMessageText: Portfolio duplicateAccountErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50914873!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915220!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild addAccount: account.
	portfolioParent addPortfolio: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:19:55' prior: 50915901!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.! !

!methodRemoval: Portfolio #add: stamp: 'Ch.A 10/16/2021 19:19:55'!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:19:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:19:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:19:57'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:20:33'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:20:33'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:20:58'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:21:40'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:21:40'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:21:40'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:22:52'!
addAccountt: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50916001!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios addAccountt: aPortfolio .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50915954!
register: aTransaction

	transactions addAccountt: aTransaction 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50915973!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio addAccountt: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50915917!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio addAccountt: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50916026!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio addAccountt: account1.
	portfolio addAccountt: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50916055!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccountt: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50915929!
test08

	|rootPortfolio childPortfolio account1 account2 transaction1 transaction2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	rootPortfolio addAccountt: account1.
	childPortfolio addAccountt: account2 .
	
	self assert: (rootPortfolio hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (rootPortfolio hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50915960!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 addAccountt: account.
	portfolio2 addAccountt: account.
	
	self assert: (portfolio1 hasAccount: account).
	self assert: (portfolio2 hasAccount: account).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50916013!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addAccountt: account.
	
	self 
	should: [portfolio addAccountt: account.]
	raise: Error 
	withMessageText: Portfolio duplicateAccountErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:52' prior: 50916040!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild addAccountt: account.
	portfolioParent addPortfolio: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:53' prior: 50915983!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio addAccountt: account1.
	portfolio addAccountt: account2.
	portfolio addAccountt: account3.
	self assert: 300 equals: (portfolio balance).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:22:53' prior: 50916134!
addAccountt: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccountt: anAccount.! !

!methodRemoval: Portfolio #addAccount: stamp: 'Ch.A 10/16/2021 19:22:53'!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccountt: anAccount.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:23:05'!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccountt: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916272!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	portfolio addAccount: account3.
	self assert: 300 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916231!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	
	self assert: (portfolio1 hasAccount: account).
	self assert: (portfolio2 hasAccount: account).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916206!
test08

	|rootPortfolio childPortfolio account1 account2 transaction1 transaction2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	rootPortfolio addAccount: account1.
	childPortfolio addAccount: account2 .
	
	self assert: (rootPortfolio hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (rootPortfolio hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916257!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild addAccount: account.
	portfolioParent addPortfolio: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916155!
register: aTransaction

	transactions addAccount: aTransaction 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916161!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio addAccount: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916244!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio addAccount: account.
	
	self 
	should: [portfolio addAccount: account.]
	raise: Error 
	withMessageText: Portfolio duplicateAccountErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916183!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916290!
addAccountt: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916171!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio addAccount: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916143!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios addAccount: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 19:23:05' prior: 50916306!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.! !

!methodRemoval: Portfolio #addAccountt: stamp: 'Ch.A 10/16/2021 19:23:05'!
addAccountt: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts addAccount: anAccount.!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:23:07'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:23:07'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:23:07'!
ERROR!

----STARTUP---- (16 October 2021 19:24:18) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!


----End fileIn of /home/alex/Downloads/linux64-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:24:47'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:24:47'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 19:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 19:24:47'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:24:52'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 19:24:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:24:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:24:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 19:24:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:24:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:24:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 19:24:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:25:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:25:55'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:26:14' prior: 50915244!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 19:26:23' prior: 50915252!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	childrenPortfolios add: aPortfolio .! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ch.A 10/16/2021 19:26:41' prior: 50915319!
register: aTransaction

	transactions add: aTransaction 
! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 19:26:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 19:26:47'!
PASSED!

----QUIT----(16 October 2021 20:22:21) CuisUniversity-4913.image priorSource: 18661997!

----STARTUP---- (16 October 2021 21:15:01) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!

!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 21:17:52' prior: 50915229!
balance
	|res|
	
	res := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].

	res := res + (childrenPortfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).
	
	^res.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 21:27:42'!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio addPortfolio: childPortfolio.
	self 
	should: [childPortfolio add rootPortfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:27:43'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:30:48'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 21:31:41' prior: 50915557!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio addPortfolio: childPortfolio.
	self 
	should: [childPortfolio addPortfolio: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:31:42'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:31:57'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:31:57'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 21:40:48'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:40:47' prior: 50915469!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	childrenPortfolios add: aPortfolio.
	
	parentPortfolio := self.! !
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 21:41:13' prior: 50915238 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	childrenPortfolios := OrderedCollection new.
	parentPortfolio := nil.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:41:15'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:41:15'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:41:37'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:43:48' prior: 50915604!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	childrenPortfolios add: aPortfolio.
	
	parentPortfolio := self. "falta implementar para que pase el test13"! !
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 21:47:12' prior: 50915617 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	childrenPortfolios := OrderedCollection new.
	parentPortfolio := OrderedCollection new.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:47:24' prior: 50915661!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	childrenPortfolios add: aPortfolio.
	
	parentPortfolio add: self.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 21:47:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 21:47:29'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:47:29'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:47:29'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:48:15' prior: 50915683!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 21:48:48'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolio parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:48:44'!
addParentPortfolio: aPortfolio 
	
	parentPortfolios add: aPortfolio.! !
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 21:49:01' prior: 50915675 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	childrenPortfolios := OrderedCollection new.
	parentPortfolios := OrderedCollection new.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 21:49:10'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:49:17'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:49:17'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:52:45' prior: 50915756!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	parentPortfolios.
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 21:54:48' prior: 50915811!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 21:54:50'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 21:54:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:01:22'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 22:01:33'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!

----STARTUP---- (16 October 2021 22:01:58) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!


!classRemoval: #ReceptiveAccount stamp: 'Ch.A 10/16/2021 22:02:16'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'Ch.A 10/16/2021 22:02:17'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'Ch.A 10/16/2021 22:02:17'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'Ch.A 10/16/2021 22:02:17'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'Ch.A 10/16/2021 22:02:17'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'Ch.A 10/16/2021 22:02:18'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'Ch.A 10/16/2021 22:02:18'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/alex/Downloads/linux64-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 22:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 22:02:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:42:55'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 22:42:55'!
test01

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!

Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 22:55:06'!
Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 22:55:18'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 22:55:57'!
PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 22:57:03'!
add: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:57:03' prior: 50915754!
test12

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [rootPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:57:03' prior: 50915745!
test11

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:57:03' prior: 50915730!
test10

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 hasPortfolio: childPortfolio ).
	self assert: (rootPortfolio2 hasPortfolio: childPortfolio ).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:57:03' prior: 50915767!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:57:03' prior: 50915666!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild addAccount: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'Ch.A 10/16/2021 22:57:03'!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.!
!PortfolioEntry methodsFor: 'nil' stamp: 'Ch.A 10/16/2021 22:58:53'!
add: aPortfolioEntry
	self subclassResponsibility.! !
!PortfolioEntry methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 22:59:09' prior: 50916324!
add: aPortfolioEntry
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:04'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:08'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:04:12'!
PASSED!
!PortfolioEntry methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:04:40'!
balance
	self subclassResponsibility.! !
!PortfolioEntry methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:05:06'!
hasRegistered: aTransaction
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:08:43'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:08:55'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:09:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:09:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:09:49'!
PASSED!

!classRenamed: #PortfolioTest as: #PortfolioEntryTest stamp: 'Ch.A 10/16/2021 23:16:30'!
Smalltalk renameClassNamed: #PortfolioTest as: #PortfolioEntryTest!

!testRun: #PortfolioEntryTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test02 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test03 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test04 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test05 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test06 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test07 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test08 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test09 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test10 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test11 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test12 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test13 stamp: 'Ch.A 10/16/2021 23:16:34'!
PASSED!

!testRun: #PortfolioEntryTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test02 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test03 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test04 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test05 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test06 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test07 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test08 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test09 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test10 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test11 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test12 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test13 stamp: 'Ch.A 10/16/2021 23:16:36'!
PASSED!

!testRun: #PortfolioEntryTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test02 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test03 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test04 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test05 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test06 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test07 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test08 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test09 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test10 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test11 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test12 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test13 stamp: 'Ch.A 10/16/2021 23:16:53'!
PASSED!

!testRun: #PortfolioEntryTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:00'!
PASSED!

!testRun: #PortfolioEntryTest #test03 stamp: 'Ch.A 10/16/2021 23:17:04'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:17:26'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRenamed: #PortfolioEntryTest as: #PortfolioTest stamp: 'Ch.A 10/16/2021 23:17:35'!
Smalltalk renameClassNamed: #PortfolioEntryTest as: #PortfolioTest!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:37'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:39'!
PASSED!

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:17:51'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:17:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:17:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:18:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:18:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:18:08'!
PASSED!

!classRemoval: #ReceptiveAccount stamp: 'Ch.A 10/16/2021 23:18:41'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioEntry stamp: 'Ch.A 10/16/2021 23:18:41'!
Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'Ch.A 10/16/2021 23:18:42'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'Ch.A 10/16/2021 23:18:42'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'Ch.A 10/16/2021 23:18:42'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'Ch.A 10/16/2021 23:18:42'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'Ch.A 10/16/2021 23:18:43'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'Ch.A 10/16/2021 23:18:43'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/alex/Downloads/linux64-Portfolio/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:19:53'!
PASSED!

Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:21:11'!
Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:21:24'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:21:26'!
PASSED!

PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:21:39'!
PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/16/2021 23:21:41'!
PASSED!
!PortfolioEntry methodsFor: 'nil' stamp: 'Ch.A 10/16/2021 23:22:01'!
balance
	self subclassResponsibility.! !
!PortfolioEntry methodsFor: 'nil' stamp: 'Ch.A 10/16/2021 23:22:21'!
hasRegistered: aTransaction
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:23:54'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:25:38'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'accounts childrenPortfolios parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'Ch.A 10/16/2021 23:25:37' prior: 50917762 overrides: 16896425!
initialize
	portfoliosEntries := OrderedCollection new.
	parentPortfolios := OrderedCollection new.! !

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Ch.A 10/16/2021 23:26:32'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 23:27:29'!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917397!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917373!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917477!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 hasAccount: account).
	self assert: (portfolio2 hasAccount: account).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917414!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicateAccountErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917383!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917440!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917452!
test08

	|rootPortfolio childPortfolio account1 account2 transaction1 transaction2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	rootPortfolio add: account1.
	childPortfolio add: account2 .
	
	self assert: (rootPortfolio hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (rootPortfolio hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:27:29' prior: 50917426!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent addPortfolio: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: Portfolio #addAccount: stamp: 'Ch.A 10/16/2021 23:27:29'!
addAccount: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 23:28:31'!
add1: anAccount

	| accounts |
	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.! !

!methodRemoval: Portfolio #add: stamp: 'Ch.A 10/16/2021 23:28:54'!
add: anAccount

	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 23:29:07'!
add: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:29:07' prior: 50917490!
test10

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 hasPortfolio: childPortfolio ).
	self assert: (rootPortfolio2 hasPortfolio: childPortfolio ).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:29:07' prior: 50917527!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:29:07' prior: 50918191!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:29:07' prior: 50917514!
test12

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [rootPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:29:07' prior: 50917505!
test11

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio cantAddPortfolioErrorDescription.
		
	! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'Ch.A 10/16/2021 23:29:07'!
addPortfolio: aPortfolio 
	
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 23:34:34' prior: 50918227!
add: aPortfolioEntry
	
	
	(self has: aPortfolioEntry) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	aPortfolioEntry addParentPortfolio: self.
	portfoliosEntries add: aPortfolioEntry.
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:36:20'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:36:20'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:36:23'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:36:23'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:36:27'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:36:27'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:36:46'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:36:46'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:36:56'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:37:16'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:37:22'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:37:27'!
ERROR!

!methodRemoval: Portfolio #add1: stamp: 'Ch.A 10/16/2021 23:38:47'!
add1: anAccount

	| accounts |
	(accounts includes: anAccount) ifTrue: [^self error: self class duplicateAccountErrorDescription.].
	accounts add: anAccount.!
!Portfolio methodsFor: 'balance' stamp: 'Ch.A 10/16/2021 23:40:28' prior: 50917753 overrides: 50918007!
balance
	
	^portfoliosEntries sum: [:aPortfolioEntry | aPortfolioEntry balance] ifEmpty: [0]
	
! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:40:31'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:40:31'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:40:31'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:40:31'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:40:31'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:40:39'!
ERROR!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 23:41:06'!
has: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:41:06' prior: 50918114!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).! !

!methodRemoval: Portfolio #hasAccount: stamp: 'Ch.A 10/16/2021 23:41:06'!
hasAccount: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 23:41:20'!
has1: anAccount 
	| accounts |
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.! !

!methodRemoval: Portfolio #has: stamp: 'Ch.A 10/16/2021 23:41:52'!
has: anAccount 
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 23:42:04'!
has: aPortfolio 
	childrenPortfolios detect: [:portfolio | portfolio = aPortfolio  ] ifNone: [^false].
	^true.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:42:04' prior: 50918243!
test10

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).! !

!methodRemoval: Portfolio #hasPortfolio: stamp: 'Ch.A 10/16/2021 23:42:04'!
hasPortfolio: aPortfolio 
	childrenPortfolios detect: [:portfolio | portfolio = aPortfolio  ] ifNone: [^false].
	^true.!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ch.A 10/16/2021 23:44:10'!
has: anAccount
	^self = anAccount.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ch.A 10/16/2021 23:44:30' prior: 50918620!
has: anAccount
	^self isEqualTo: anAccount.! !

!methodRemoval: Portfolio #has1: stamp: 'Ch.A 10/16/2021 23:45:34'!
has1: anAccount 
	| accounts |
	accounts detect: [:account | account = anAccount ] ifNone: [^false].
	^true.!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/16/2021 23:47:27' prior: 50918593!
has: aPortfolioEntry
	portfoliosEntries detect: [:PortfolioEntry | PortfolioEntry has: aPortfolioEntry  ] ifNone: [^false].
	^true.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:47:59'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:47:59'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:47:59'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:47:59'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:47:59'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:47:59'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:48:06'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:49:48'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:51:03'!
addParentPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'Ch.A 10/16/2021 23:52:11' prior: 50918322!
add: aPortfolioEntry
	
	
	(self has: aPortfolioEntry) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	
	aPortfolioEntry class = Portfolio ifTrue: [ aPortfolioEntry addParentPortfolio: self].
	portfoliosEntries add: aPortfolioEntry.
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:52:12'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:52:20'!
FAILURE!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/16/2021 23:52:20'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/16/2021 23:52:20'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/16/2021 23:52:20'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/16/2021 23:52:20'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/16/2021 23:52:20'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/16/2021 23:52:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:52:25'!
FAILURE!

self isEqualTo: anAccount!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/16/2021 23:57:16'!
FAILURE!

self class!
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/16/2021 23:59:58'!
duplicatePortfolioEntryErrorDescription
	^'Porfolio cant be added'.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:59:58' prior: 50918684!
add: aPortfolioEntry
	
	
	(self has: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription].
	
	
	aPortfolioEntry class = Portfolio ifTrue: [ aPortfolioEntry addParentPortfolio: self].
	portfoliosEntries add: aPortfolioEntry.
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:59:58' prior: 50918298!
test11

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:59:58' prior: 50918285!
test12

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [rootPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/16/2021 23:59:58' prior: 50918258!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: Portfolio class #cantAddPortfolioErrorDescription stamp: 'Ch.A 10/16/2021 23:59:58'!
cantAddPortfolioErrorDescription
	^'Porfolio cant be added'.!
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/17/2021 00:00:05'!
duplicateAccountErrorDescription2
	^'Account is duplicate'.! !

!methodRemoval: Portfolio class #duplicateAccountErrorDescription stamp: 'Ch.A 10/17/2021 00:00:10'!
duplicateAccountErrorDescription
	^'Account is duplicate'.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 00:02:29' prior: 50918127!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: Portfolio class #duplicateAccountErrorDescription2 stamp: 'Ch.A 10/17/2021 00:02:52'!
duplicateAccountErrorDescription2
	^'Account is duplicate'.!
!Portfolio class methodsFor: 'error messages' stamp: 'Ch.A 10/17/2021 00:03:28' prior: 50918751!
duplicatePortfolioEntryErrorDescription
	^'duplicate PortfolioEntry cannot be added'.! !

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:03:32'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/17/2021 00:03:32'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:03:32'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 00:03:32'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 00:03:32'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/17/2021 00:03:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:03:37'!
ERROR!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/17/2021 00:04:44' prior: 50917812 overrides: 50918011!
hasRegistered: aTransaction
	portfoliosEntries detect: [:aPortfolioEntry | aPortfolioEntry hasRegistered: aTransaction] ifNone:[^false].
	^true.! !

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:04:48'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:04:55'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 00:04:55'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 00:04:55'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/17/2021 00:04:55'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:04:57'!
FAILURE!

self assert: (rootPortfolio1 has: childPortfolio ).!

self assert: (rootPortfolio2 has: childPortfolio ).!

self assert: (rootPortfolio1 has: childPortfolio ).!
!Portfolio methodsFor: 'unclassified' stamp: 'Ch.A 10/17/2021 00:11:15' prior: 50918635!
has: aPortfolioEntry
	self = aPortfolioEntry ifTrue:[^true].
	portfoliosEntries detect: [:PortfolioEntry | PortfolioEntry has: aPortfolioEntry  ] ifNone: [^false].
	^true.! !

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:11:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 00:11:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 00:11:22'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/17/2021 00:11:25'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 00:23:08'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'Ch.A 10/17/2021 00:23:15'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!

----SNAPSHOT----(17 October 2021 00:29:05) CuisUniversity-4913.image priorSource: 18684502!

!testRun: #PortfolioTest #test01 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/17/2021 00:29:07'!
PASSED!

----QUIT----(17 October 2021 00:29:33) CuisUniversity-4913.image priorSource: 18795271!

----STARTUP---- (17 October 2021 18:10:21) as /home/alex/Downloads/linux64-Portfolio/CuisUniversity-4913.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:11:11'!
test01emptyPortfolioHasCeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01emptyPortfolioHasCeroBalance stamp: 'Ch.A 10/17/2021 18:11:17'!
test01emptyPortfolioHasCeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:11:52'!
test01EmptyPortfolioHasCeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01 stamp: 'Ch.A 10/17/2021 18:11:52'!
test01

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:12:40'!
test02aPortfolioWithOneAccountHas100Balance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test02 stamp: 'Ch.A 10/17/2021 18:12:40'!
test02

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:13:00'!
test03aPortfolioWithTwoAccountsHas200Balance

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test03 stamp: 'Ch.A 10/17/2021 18:13:00'!
test03

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:13:33'!
test04aPortfolioWithThreeAccountsHas300Balance

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test04 stamp: 'Ch.A 10/17/2021 18:13:33'!
test04

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:14:18'!
test05cannontAddTheSameAccountInAPortfolioTwice

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test05 stamp: 'Ch.A 10/17/2021 18:14:18'!
test05

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:14:33'!
test05cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test05cannontAddTheSameAccountInAPortfolioTwice stamp: 'Ch.A 10/17/2021 18:14:33'!
test05cannontAddTheSameAccountInAPortfolioTwice

	|portfolio account|
	
	
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:15:29'!
test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: PortfolioTest #test06 stamp: 'Ch.A 10/17/2021 18:15:29'!
test06

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:17:50'!
test07aPortfolioHasRegisteredATransactionMadeByItsAccount

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !

!methodRemoval: PortfolioTest #test07 stamp: 'Ch.A 10/17/2021 18:17:50'!
test07

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:19:07' prior: 50918166!
test08

	|portfolio1 childPortfolio account1 account2 transaction1 transaction2 |
	
	portfolio1 := Portfolio new.
	childPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	portfolio1 add: account1.
	childPortfolio add: account2 .
	
	self assert: (portfolio1 hasRegistered: transaction1).
	self assert: (childPortfolio hasRegistered: transaction2 ).
	self deny: (portfolio1 hasRegistered: transaction2).
	self deny: (childPortfolio hasRegistered: transaction1 ).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:19:16' prior: 50919282!
test08

	|portfolio1 portfolio2 account1 account2 transaction1 transaction2 |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	transaction1 := (Deposit for: 100).
	transaction2 := (Withdraw for: 50).
	
	account1 register: transaction1.
	account2 register: transaction2.
	
	portfolio1 add: account1.
	portfolio2 add: account2 .
	
	self assert: (portfolio1 hasRegistered: transaction1).
	self assert: (portfolio2 hasRegistered: transaction2 ).
	self deny: (portfolio1 hasRegistered: transaction2).
	self deny: (portfolio2 hasRegistered: transaction1 ).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:21:17' prior: 50919306!
test08

	|portfolio account transaction transaction1 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	transaction := (Deposit for: 100).

	account register: transaction1.

	self deny: (portfolio hasRegistered: transaction).

	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:21:28' prior: 50919330!
test08

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	transaction := (Deposit for: 100).

	account register: transaction.

	self deny: (portfolio hasRegistered: transaction).

	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:23:15'!
test08aPortfolioWithNoAccountsHasNotRegisterATransaction

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	transaction := (Deposit for: 100).

	account register: transaction.

	self deny: (portfolio hasRegistered: transaction).

	! !

!methodRemoval: PortfolioTest #test08 stamp: 'Ch.A 10/17/2021 18:23:15'!
test08

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	transaction := (Deposit for: 100).

	account register: transaction.

	self deny: (portfolio hasRegistered: transaction).

	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:24:35'!
test09AnAccountCanBeInTwoPortfolios

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).! !

!methodRemoval: PortfolioTest #test09 stamp: 'Ch.A 10/17/2021 18:24:35'!
test09

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:25:21'!
test10AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).! !

!methodRemoval: PortfolioTest #test10 stamp: 'Ch.A 10/17/2021 18:25:21'!
test10

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:26:24'!
test11APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test11 stamp: 'Ch.A 10/17/2021 18:26:24'!
test11

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:27:08'!
test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [rootPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test12 stamp: 'Ch.A 10/17/2021 18:27:08'!
test12

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [rootPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:28:11' prior: 50919446!
test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:28:40'!
test13AChildPortfolioCannotAddItsParent

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test13 stamp: 'Ch.A 10/17/2021 18:28:40'!
test13

	|rootPortfolio childPortfolio |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: rootPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Ch.A 10/17/2021 18:28:55' prior: 50919486!
test13AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/17/2021 18:29:00'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ch.A 10/17/2021 18:29:02'!
PASSED!

----STARTUP---- (18 October 2021 11:38:57) as /home/matias/Downloads/linux64/CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 11:39:05' prior: 50925684!
test05cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 11:40:08'!
test05canNotAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 11:40:08'!
test05cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!ReceptiveAccount methodsFor: 'unclassified' stamp: 'MS 10/18/2021 11:43:34' prior: 50926153!
has: anAccount

	^self isEqualTo: anAccount.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 11:43:45' prior: 50926158!
addParentPortfolio: aPortfolio 

	self shouldBeImplemented.! !

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 11:56:13'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MS 10/18/2021 11:56:16'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test05canNotAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 11:56:19'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 11:56:35'!
Object subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Portfolio subclass: #PortfolioItem
	instanceVariableNames: 'parentPortfolios portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Portfolio subclass: #PortfolioItem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioItem category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 11:58:21'!
Portfolio subclass: #PortfolioItem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioEntry stamp: 'MS 10/18/2021 11:58:27'!
Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test05canNotAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 11:58:28'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 11:58:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 11:58:58'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 11:58:58'!
test01EmptyPortfolioHasCeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 11:59:07' prior: 50926393!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	portfolio := Portfolio new.
	self assert: 0 equals: portfolio balance.
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 12:07:08' prior: 50926051!
add: anItem

	anItem addTo: self.
	
	
	
	"
	(self has: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription].
	
	
	aPortfolioEntry class = Portfolio ifTrue: [ aPortfolioEntry addParentPortfolio: self].
	portfoliosEntries add: aPortfolioEntry.
	"
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !

Object subclass: #PortfolioItem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioItem category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 12:07:17'!
Object subclass: #PortfolioItem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----STARTUP---- (18 October 2021 12:08:34) as /home/matias/Downloads/linux64/CuisUniversity-4532.image!

!Portfolio methodsFor: 'unclassified' stamp: 'MS 10/18/2021 12:11:22' prior: 50926092 overrides: 50926019!
hasRegistered: aTransaction
	
	^portfoliosEntries anySatisfy: [:aPortfolioEntry | aPortfolioEntry hasRegistered: aTransaction].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 12:11:24'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 12:11:24'!
PASSED!
!PortfolioEntry methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:12:08'!
transactions
	self subclassResponsibility.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:14:35' prior: 50925684!
test05cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:16:16'!
test14emptyPortfolioHasNoTransactions

	|portfolio childPortfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:16:20' prior: 50926532!
test14emptyPortfolioHasNoTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	! !

!testRun: #PortfolioTest #test14emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:16:21'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:16:41' overrides: 50926514!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:18:04' prior: 50926551 overrides: 50926514!
transactions
	
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test14emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 12:18:04'!
PASSED!

!testRun: #PortfolioTest #test14emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:18:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:22:18'!
test14portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:22:18'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:23:58' prior: 50926556 overrides: 50926514!
transactions
	|transactions|
	
	transactions := OrderedCollection new.
	! !

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:24:02'!
FAILURE!

Object subclass: #PortfolioEntry
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 12:24:43'!
Object subclass: #PortfolioEntry
	instanceVariableNames: 'elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #PortfolioEntry
	instanceVariableNames: 'services'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 12:25:15'!
Object subclass: #PortfolioEntry
	instanceVariableNames: 'services'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:26:31'!
FAILURE!

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:26:31'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:28:31' prior: 50926634 overrides: 50926514!
transactions
	|transactions|
	
	transactions := OrderedCollection new.
	portfoliosEntries do: [:aService | transactions addAll: aService transactions ].
	^transactions.
	! !

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:28:32'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test14emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:28:36'!
PASSED!

!testRun: #PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:28:36'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:28:48' prior: 50926614!
test14portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:28:53'!
test15portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!methodRemoval: PortfolioTest #test14portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:28:53'!
test14portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:32:55'!
test02emptyPortfolioHasNoTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	! !

!methodRemoval: PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:33:33'!
test02emptyPortfolioHasNoTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:33:41'!
test02emptyPortfolioHasNoTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	! !

!methodRemoval: PortfolioTest #test14emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:33:41'!
test14emptyPortfolioHasNoTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:35:18'!
test045portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!methodRemoval: PortfolioTest #test15portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:35:18'!
test15portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:35:24'!
test05portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!methodRemoval: PortfolioTest #test045portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:35:24'!
test045portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:39:05'!
test14portfolioWithMultiplePortfoliosSumsTheirBalance

	|rootPortfolio childPortfolio1 childPortfolio2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:39:37'!
test03emptyPortfolioHasNoRegisteredTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio transactions isEmpty.	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:39:49' prior: 50926893!
test03emptyPortfolioHasNoRegisteredTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio hasRegistered: 0.	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:39:59' prior: 50926901!
test03emptyPortfolioHasNoRegisteredTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio hasRegistered: 0).	
	! !

!testRun: #PortfolioTest #test03emptyPortfolioHasNoRegisteredTransactions stamp: 'MS 10/18/2021 12:40:00'!
FAILURE!

^portfoliosEntries anySatisfy: [:aPortfolioEntry | aPortfolioEntry hasRegistered: aTransaction]!

!methodRemoval: PortfolioTest #test03emptyPortfolioHasNoRegisteredTransactions stamp: 'MS 10/18/2021 12:41:15'!
test03emptyPortfolioHasNoRegisteredTransactions

	|portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (portfolio hasRegistered: 0).	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:41:44'!
test02aPortfolioWithOneAccountHasItsBalance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test02aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 12:41:53'!
test02aPortfolioWithOneAccountHasItsBalance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:42:00'!
test02aPortfolioWithOneAccountHasItsBalance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test02aPortfolioWithOneAccountHas100Balance stamp: 'MS 10/18/2021 12:42:00'!
test02aPortfolioWithOneAccountHas100Balance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:42:11'!
test03aPortfolioWithOneAccountHasItsBalance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test02aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 12:42:11'!
test02aPortfolioWithOneAccountHasItsBalance

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:42:43'!
test06aPortfolioWithTwoAccountsHas200Balance

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test03aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 12:42:43'!
test03aPortfolioWithTwoAccountsHas200Balance

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:43:04'!
test04aPortfolioWithOneAccountHasItsTransactions

	| portfolio account1 |
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	portfolio add: account1.
	self assert: 100 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test08aPortfolioWithNoAccountsHasNotRegisterATransaction stamp: 'MS 10/18/2021 12:43:51'!
test08aPortfolioWithNoAccountsHasNotRegisterATransaction

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	transaction := (Deposit for: 100).

	account register: transaction.

	self deny: (portfolio hasRegistered: transaction).

	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:44:17'!
test05portfolioWithMultipleAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!methodRemoval: PortfolioTest #test05portfolioWithAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:44:17'!
test05portfolioWithAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:44:56'!
test08aPortfolioWithMultipleAccountsHasItsBalance

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	! !

!methodRemoval: PortfolioTest #test04aPortfolioWithThreeAccountsHas300Balance stamp: 'MS 10/18/2021 12:44:56'!
test04aPortfolioWithThreeAccountsHas300Balance

	| portfolio account1 account2 account3 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	account3 := ReceptiveAccount new.
	Deposit register: 100 on: account3.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	portfolio add: account3.
	self assert: 300 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:46:13'!
test07aPortfolioWithOneAccountHasRegisteredItsTransactions

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !

!methodRemoval: PortfolioTest #test07aPortfolioHasRegisteredATransactionMadeByItsAccount stamp: 'MS 10/18/2021 12:46:13'!
test07aPortfolioHasRegisteredATransactionMadeByItsAccount

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:46:23'!
test05aPortfolioWithOneAccountHasRegisteredItsTransactions

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !

!methodRemoval: PortfolioTest #test07aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:46:23'!
test07aPortfolioWithOneAccountHasRegisteredItsTransactions

	|portfolio account transaction |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := (Deposit for: 100).
	account register: transaction.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:47:26'!
test06portfolioWithMultipleAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	! !

!methodRemoval: PortfolioTest #test05portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:47:26'!
test05portfolioWithMultipleAccountsHasItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (OrderedCollection with: transaction1 with: transaction2) equals: portfolio transactions .	
	!

!methodRemoval: PortfolioTest #test06aPortfolioWithTwoAccountsHas200Balance stamp: 'MS 10/18/2021 12:47:41'!
test06aPortfolioWithTwoAccountsHas200Balance

	| portfolio account1 account2 |
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account2.
	
	portfolio := Portfolio new.
	portfolio add: account1.
	portfolio add: account2.
	self assert: 200 equals: (portfolio balance).
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:48:04'!
test10aChildPortfolioHasTheSameBalaceAsItsParentPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: PortfolioTest #test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:48:04'!
test06aChildPortfolioHasTheSameBalaceAsItsParentPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:48:20'!
test07cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test05cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:48:20'!
test05cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:50:46'!
test06portfolioWithMultipleAccountsHasRegisteredItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (account hasRegistered: transaction1).
	self assert: (account hasRegistered: transaction2).
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:50:51' prior: 50927277!
test06portfolioWithMultipleAccountsHasRegisteredItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (transaction1 hasRegistered: transaction1).
	self assert: (account hasRegistered: transaction2).
	
	! !

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:50:52'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:51:10' prior: 50927294!
test06portfolioWithMultipleAccountsHasRegisteredItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	
	! !

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test07cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test10aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 12:51:10'!
PASSED!

!testRun: #PortfolioTest #test14portfolioWithMultiplePortfoliosSumsTheirBalance stamp: 'MS 10/18/2021 12:51:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:51:24'!
test07portfolioWithMultipleAccountsHasRegisteredItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	
	! !

!methodRemoval: PortfolioTest #test06portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 12:51:24'!
test06portfolioWithMultipleAccountsHasRegisteredItsTransactions

	|portfolio account transaction1 transaction2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction1 := Deposit register: 100 on: account.
	transaction2 := Withdraw register: 50 on: account.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:51:37'!
test10cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test07cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 12:51:37'!
test07cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:51:50'!
test13AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).! !

!methodRemoval: PortfolioTest #test10AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 12:51:50'!
test10AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:52:18'!
test14APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test11APortfolioCannotAddItself stamp: 'MS 10/18/2021 12:52:18'!
test11APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:53:39'!
test10aPortfolioHasTheSameBalanceAsItsPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: PortfolioTest #test10aChildPortfolioHasTheSameBalaceAsItsParentPortfolio stamp: 'MS 10/18/2021 12:53:39'!
test10aChildPortfolioHasTheSameBalaceAsItsParentPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:54:52'!
test10aPortfolioWithOnePortfolioHasItsBalance

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: PortfolioTest #test10aPortfolioHasTheSameBalanceAsItsPortfolio stamp: 'MS 10/18/2021 12:54:52'!
test10aPortfolioHasTheSameBalanceAsItsPortfolio

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 12:55:16'!
test11aPortfolioWithOnePortfolioHasItsBalance

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !

!methodRemoval: PortfolioTest #test10aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 12:55:16'!
test10aPortfolioWithOnePortfolioHasItsBalance

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 13:07:25'!
test09cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.! !

!methodRemoval: PortfolioTest #test10cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 13:07:25'!
test10cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 13:07:32'!
test10AnAccountCanBeInTwoPortfolios

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).! !

!methodRemoval: PortfolioTest #test09AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 13:07:32'!
test09AnAccountCanBeInTwoPortfolios

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.

	portfolio1 add: account.
	portfolio2 add: account.
	
	self assert: (portfolio1 has: account).
	self assert: (portfolio2 has: account).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:07:50'!
test11aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild balance equals: 	portfolioParent balance.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:08:28' prior: 50927648!
test11aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account transaction |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := Deposit register: 100 on: account.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild transactions equals: 	portfolioParent trailer .
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:08:40' prior: 50927664!
test11aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild transactions equals: 	portfolioParent trailer .
	! !

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:08:43'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:08:52' prior: 50927681!
test11aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild transactions equals: 	portfolioParent transactions .
	! !

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:08:53'!
PASSED!

!testRun: #PortfolioTest #test14portfolioWithMultiplePortfoliosSumsTheirBalance stamp: 'MS 10/18/2021 14:08:53'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:09:05'!
test12aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild transactions equals: 	portfolioParent transactions .
	! !

!methodRemoval: PortfolioTest #test11aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:09:05'!
test11aPortfolioWithOnePortfolioHasItsTransactions

	|portfolioParent portfolioChild account |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild transactions equals: 	portfolioParent transactions .
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:10:04'!
test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered

	|portfolioParent portfolioChild account transaction |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := Deposit register: 100  on: account .
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: portfolioChild hasRegistered: portfolioParent.
	! !

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:10:08'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:10:22' prior: 50927807!
test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered

	|portfolioParent portfolioChild account transaction |
	
	portfolioParent := Portfolio new.
	portfolioChild := Portfolio new.
	
	account := ReceptiveAccount new.
	transaction := Deposit register: 100  on: account .
	portfolioChild add: account.
	portfolioParent add: portfolioChild.
	
	self assert: (portfolioChild hasRegistered: transaction ).
	! !

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:10:23'!
PASSED!

!testRun: #PortfolioTest #test14portfolioWithMultiplePortfoliosSumsTheirBalance stamp: 'MS 10/18/2021 14:10:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:10:45'!
test14AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test14AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:10:57'!
test14AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:11:04'!
test14AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test13AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:11:04'!
test13AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:11:15'!
test15AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test14AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:11:15'!
test14AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:11:40'!
test16portfolioWithMultiplePortfoliosSumsTheirBalance

	|rootPortfolio childPortfolio1 childPortfolio2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	
	! !

!methodRemoval: PortfolioTest #test14portfolioWithMultiplePortfoliosSumsTheirBalance stamp: 'MS 10/18/2021 14:11:40'!
test14portfolioWithMultiplePortfoliosSumsTheirBalance

	|rootPortfolio childPortfolio1 childPortfolio2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:14:38'!
test16portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:14:55' prior: 50928011!
test16portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
! !

!methodRemoval: PortfolioTest #test16portfolioWithMultiplePortfoliosSumsTheirBalance stamp: 'MS 10/18/2021 14:15:06'!
test16portfolioWithMultiplePortfoliosSumsTheirBalance

	|rootPortfolio childPortfolio1 childPortfolio2 |
	
	rootPortfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:15:35'!
test16portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:17:45' prior: 50928050!
test16portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance.
	! !

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:17:47'!
PASSED!

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:17:47'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:17:58' prior: 50928065!
test16portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio initialize .
	! !

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:17:59'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:18:08' prior: 50928164!
test16portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test13AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:18:09'!
PASSED!

!testRun: #PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:18:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:19:01'!
test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!methodRemoval: PortfolioTest #test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:19:01'!
test12CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:19:12'!
test16AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).! !

!methodRemoval: PortfolioTest #test13AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:19:12'!
test13AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).!

!methodRemoval: PortfolioTest #test16portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:19:31'!
test16portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:19:54'!
test17AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).! !

!methodRemoval: PortfolioTest #test16AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:19:54'!
test16AChildPortfolioCanBeInTwoParentPortfolios

	|rootPortfolio1 rootPortfolio2 childPortfolio |
	
	rootPortfolio1 := Portfolio new.
	rootPortfolio2 := Portfolio new.
	childPortfolio := Portfolio new.
	
	rootPortfolio1 add: childPortfolio .
	rootPortfolio2 add: childPortfolio .
	
	self assert: (rootPortfolio1 has: childPortfolio ).
	self assert: (rootPortfolio2 has: childPortfolio ).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:20:04'!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !

!methodRemoval: PortfolioTest #test16portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:20:04'!
test16portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:21:06'!
test18portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: childPortfolio transactions equals: rootPortfolio balance.
	self assert: grandchildPortfolio transactions equals: rootPortfolio balance.	! !

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:21:06'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:21:21' prior: 50928451!
test18portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: childPortfolio transactions equals: rootPortfolio transactions .
	self assert: grandchildPortfolio transactions equals: rootPortfolio transactions.	! !

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:21:22'!
FAILURE!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:22:13'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:23:34' prior: 50928399!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 transaction1 transaction2 transaction3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	transaction1 := Deposit register: 100  on: account1 .
	transaction2 := Deposit register: 100  on: account2.
	transaction3 := Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:24:09' prior: 50928521!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:24:14'!
test19portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: childPortfolio transactions equals: rootPortfolio transactions .
	self assert: grandchildPortfolio transactions equals: rootPortfolio transactions.	! !

!methodRemoval: PortfolioTest #test18portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:24:14'!
test18portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1 .
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: childPortfolio transactions equals: rootPortfolio transactions .
	self assert: grandchildPortfolio transactions equals: rootPortfolio transactions.	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:26:36' prior: 50928572!
test19portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 transaction1 transaction2 transaction3 transactions |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	transaction1 := Deposit register: 100  on: account1 .
	transaction2 := Deposit register: 100  on: account2.
	transaction3 := Deposit register: 100  on: account3.
	
	transactions := OrderedCollection with: transaction1 with: transaction2 with: transaction3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: transactions  equals: rootPortfolio balance .
! !

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:26:37'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:26:43' prior: 50928631!
test19portfolioWithPortfolioWithPortfolioHasItsTransactions

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 transaction1 transaction2 transaction3 transactions |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	transaction1 := Deposit register: 100  on: account1 .
	transaction2 := Deposit register: 100  on: account2.
	transaction3 := Deposit register: 100  on: account3.
	
	transactions := OrderedCollection with: transaction1 with: transaction2 with: transaction3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: transactions  equals: rootPortfolio transactions .
! !

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:26:44'!
FAILURE!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:26:44'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:26:44'!
FAILURE!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:26:51'!
FAILURE!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:26:51'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:27:28' prior: 50928550!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1.
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:27:33' prior: 50928785!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1.
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio transactions .
	! !

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:27:33'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:27:40' prior: 50928811!
test18portfolioWithPortfolioWithPortfolioSumsTheirBalance

	|rootPortfolio childPortfolio grandchildPortfolio account1 account2 account3 |
	
	rootPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100  on: account1.
	Deposit register: 100  on: account2.
	Deposit register: 100  on: account3.
	
	rootPortfolio add: account1.
	childPortfolio add:account2.
	grandchildPortfolio add: account3.
	
	rootPortfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	self assert: (100+100+100) equals: rootPortfolio balance .
	! !

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:27:41'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:27:42'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:27:42'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:30:15'!
test20aPortfolioCannotAddItsGrandfather

	|grandparentPortfolio parentPortfolio childPortfolio |
	
	grandparentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	grandparentPortfolio add: parentPortfolio .
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: grandparentPortfolio ]
	raise: Error 
	withMessageText: Portfolio duplicatePortfolioEntryErrorDescription.
		
	! !

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:30:16'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:31:20' prior: 50926051!
add: aPortfolioEntry
	
	
	(self has: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription].
	
	aPortfolioEntry class = Portfolio ifTrue: [ aPortfolioEntry addParentPortfolio: self].
	portfoliosEntries add: aPortfolioEntry.
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:31:46' prior: 50928961!
add: aPortfolioEntry
	
	self assertCanBeAdded: aPortfolioEntry.
	
	(self has: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription ].
	(parentPortfolios includes: aPortfolioEntry) ifTrue: [self error: self class duplicatePortfolioEntryErrorDescription].
	
	aPortfolioEntry class = Portfolio ifTrue: [ aPortfolioEntry addParentPortfolio: self].
	portfoliosEntries add: aPortfolioEntry.
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:34:17'!
assertCanBeAdded: aPorfolioEntry

	
	
	
	
	
	
	"
	self = aPortfolio ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	
	(self hasPortfolio: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription ].
	(parentPortfolios includes: aPortfolio) ifTrue: [self error: self class cantAddPortfolioErrorDescription].
	
	childrenPortfolios add: aPortfolio.
	
	aPortfolio addParentPortfolio: self."! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:34:19' prior: 50929018!
assertCanBeAdded: aPorfolioEntry

	
	
! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:34:57' prior: 50928989!
add: aPortfolioEntry
	
	aPortfolioEntry addToPortfolio: self.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:36:42'!
addToPortfolio: aPortfolio

	aPortfolio addPortfolio: self.! !

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'ancestors portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MS 10/18/2021 14:41:35'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'ancestors portfoliosEntries'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!methodRemoval: Portfolio #addParentPortfolio: stamp: 'MS 10/18/2021 14:41:46'!
addParentPortfolio: aPortfolio 
	
	parentPortfolios add: aPortfolio.!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:42:09'!
addPortfolio: aPortfolio

	ancestors add: aPortfolio.! !
!Portfolio methodsFor: 'initialization' stamp: 'MS 10/18/2021 14:42:16' prior: 50926045 overrides: 16896425!
initialize
	portfoliosEntries := OrderedCollection new.
	ancestors := OrderedCollection new.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:43:04' prior: 50929068!
addPortfolio: aPortfolio

	ancestors add: aPortfolio.
	portfoliosEntries add: aPortfolio.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:43:31'!
addToPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!methodRemoval: ReceptiveAccount #addParentPortfolio: stamp: 'MS 10/18/2021 14:43:31'!
addParentPortfolio: aPortfolio 
	self shouldBeImplemented.!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:43:57' prior: 50929087!
addToPortfolio: aPortfolio 

	aPortfolio addReceptiveAccount: self.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:44:28'!
addReceptiveAccount: anAccount

	portfoliosEntries add: anAccount.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:44:31'!
FAILURE!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:44:31'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:44:31'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:44:31'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:44:31'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:44:31'!
FAILURE!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:44:39'!
FAILURE!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:44:39'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:45:04' prior: 50929102!
addReceptiveAccount: anAccount

	portfoliosEntries add: anAccount.! !

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:45:11'!
FAILURE!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:45:11'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:48:48' prior: 50929188!
addReceptiveAccount: anAccount
	
	(portfoliosEntries anySatisfy: [:account | account = anAccount ]) ifTrue: [self error: Portfolio duplicatePortfolioEntryErrorDescription].
	portfoliosEntries add: anAccount.! !

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:48:49'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:48:51'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:48:51'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:48:51'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:48:51'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:48:51'!
FAILURE!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:49:09'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:49:12'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:49:12'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:49:12'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:49:12'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:49:12'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:49:19'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:49:19'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:49:33'!
FAILURE!
!Portfolio class methodsFor: 'error messages' stamp: 'MS 10/18/2021 14:51:20'!
accountIsInHierarchyErrorDescription
	^'Account already in hierarchy cannot be added'.! !
!Portfolio class methodsFor: 'error messages' stamp: 'MS 10/18/2021 14:51:43' prior: 50926107!
duplicatePortfolioEntryErrorDescription
	^'Account already in hierarchy cannot be added'.! !

!methodRemoval: Portfolio class #accountIsInHierarchyErrorDescription stamp: 'MS 10/18/2021 14:51:50'!
accountIsInHierarchyErrorDescription
	^'Account already in hierarchy cannot be added'.!
!Portfolio class methodsFor: 'error messages' stamp: 'MS 10/18/2021 14:51:58'!
accountIsInHierarchyErrorDescription
	^'Account already in hierarchy cannot be added'.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50927596!
test09cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio accountIsInHierarchyErrorDescription.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50929201!
addReceptiveAccount: anAccount
	
	(portfoliosEntries anySatisfy: [:account | account = anAccount ]) ifTrue: [self error: Portfolio accountIsInHierarchyErrorDescription].
	portfoliosEntries add: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50927966!
test15AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio accountIsInHierarchyErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50928293!
test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio accountIsInHierarchyErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50927486!
test14APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio accountIsInHierarchyErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:51:58' prior: 50928940!
test20aPortfolioCannotAddItsGrandfather

	|grandparentPortfolio parentPortfolio childPortfolio |
	
	grandparentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	grandparentPortfolio add: parentPortfolio .
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: grandparentPortfolio ]
	raise: Error 
	withMessageText: Portfolio accountIsInHierarchyErrorDescription.
		
	! !

!methodRemoval: Portfolio class #duplicatePortfolioEntryErrorDescription stamp: 'MS 10/18/2021 14:51:58'!
duplicatePortfolioEntryErrorDescription
	^'Account already in hierarchy cannot be added'.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:52:00'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:52:00'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:52:00'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:52:00'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:52:00'!
FAILURE!
!Portfolio class methodsFor: 'error messages' stamp: 'MS 10/18/2021 14:52:38'!
accountIsAlreadyInHierarchyErrorDescription
	^'Account already in hierarchy cannot be added'.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929439!
test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio accountIsAlreadyInHierarchyErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929425!
test15AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio accountIsAlreadyInHierarchyErrorDescription.
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929454!
test14APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio accountIsAlreadyInHierarchyErrorDescription.
		
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929415!
addReceptiveAccount: anAccount
	
	(portfoliosEntries anySatisfy: [:account | account = anAccount ]) ifTrue: [self error: Portfolio accountIsAlreadyInHierarchyErrorDescription].
	portfoliosEntries add: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929401!
test09cannontAddTheSameAccountToAPortfolioTwice

	|portfolio account|
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio := Portfolio new.
	portfolio add: account.
	
	self 
	should: [portfolio add: account.]
	raise: Error 
	withMessageText: Portfolio accountIsAlreadyInHierarchyErrorDescription.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:52:38' prior: 50929464!
test20aPortfolioCannotAddItsGrandfather

	|grandparentPortfolio parentPortfolio childPortfolio |
	
	grandparentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	grandparentPortfolio add: parentPortfolio .
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: grandparentPortfolio ]
	raise: Error 
	withMessageText: Portfolio accountIsAlreadyInHierarchyErrorDescription.
		
	! !

!methodRemoval: Portfolio class #accountIsInHierarchyErrorDescription stamp: 'MS 10/18/2021 14:52:38'!
accountIsInHierarchyErrorDescription
	^'Account already in hierarchy cannot be added'.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:52:46'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:52:46'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:52:46'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:52:46'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:52:46'!
FAILURE!
!Portfolio class methodsFor: 'error messages' stamp: 'MS 10/18/2021 14:53:15'!
portfolioIsAlreadyInHierarchyErrorDescription
	^'Portfolio already in hierarchy cannot be added'.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:53:21'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:53:21'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:53:21'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:53:21'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:53:21'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:53:31'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:53:31'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:53:36'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:54:33' prior: 50929606!
addReceptiveAccount: anAccount
	
	(portfoliosEntries anySatisfy: [:account | account = anAccount ]) ifTrue: [self error: Portfolio accountIsAlreadyInHierarchyErrorDescription].
	
	portfoliosEntries add: anAccount.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:55:09' prior: 50929081!
addPortfolio: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [self error: Portfolio accountIsAlreadyInHierarchyErrorDescription].

	ancestors add: aPortfolio.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:55:15' prior: 50929825!
addPortfolio: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	ancestors add: aPortfolio.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:55:20'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:55:20'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:55:20'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:55:20'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:55:20'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:55:29'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:55:29'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:55:37' prior: 50929596!
test14APortfolioCannotAddItself

	|portfolio |
	
	portfolio := Portfolio new.
	self 
	should: [portfolio add: portfolio]
	raise: Error 
	withMessageText: Portfolio portfolioIsAlreadyInHierarchyErrorDescription .
		
	! !

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:55:38'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:55:42'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:56:19' prior: 50929837!
addPortfolio: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	ancestors add: aPortfolio.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:56:22'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:56:22'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:56:22'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:56:22'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:56:41'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 14:56:48' prior: 50929582!
test15AChildPortfolioCannotAddItsParent

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: parentPortfolio]
	raise: Error 
	withMessageText: Portfolio portfolioIsAlreadyInHierarchyErrorDescription .
		
	! !

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:56:50'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:57:00'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:58:08' prior: 50929945!
addPortfolio: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	ancestors add: aPortfolio.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:58:12'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:58:17'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 14:58:17'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 14:58:17'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 14:58:17'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:58:29'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 14:58:29'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 14:59:45' prior: 50930057!
addPortfolio: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:00:27'!
addAncestor: aPortfolio

	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:00:29'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:00:35'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:00:42'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:01:06' prior: 50930179!
addAncestor: aPortfolio

	ancestors add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:08'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:08'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:01:08'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:18'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:18'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 15:01:39' prior: 50929567!
test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio

	|parentPortfolio childPortfolio |
	
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	parentPortfolio add: childPortfolio.
	self 
	should: [parentPortfolio add: childPortfolio ]
	raise: Error 
	withMessageText: Portfolio portfolioIsAlreadyInHierarchyErrorDescription .
		
	! !

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:41'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:42'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:01:42'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:01:42'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:01:52'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:01:52'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:01:52'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:01:59'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 15:02:22' prior: 50929630!
test20aPortfolioCannotAddItsGrandfather

	|grandparentPortfolio parentPortfolio childPortfolio |
	
	grandparentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	childPortfolio := Portfolio new.
	
	grandparentPortfolio add: parentPortfolio .
	parentPortfolio add: childPortfolio.
	self 
	should: [childPortfolio add: grandparentPortfolio ]
	raise: Error 
	withMessageText: Portfolio portfolioIsAlreadyInHierarchyErrorDescription .
		
	! !

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:02:22'!
FAILURE!
!Portfolio methodsFor: 'unclassified' stamp: 'MS 10/18/2021 15:15:46'!
isRoot

	^ancestors isEmpty.! !
!Portfolio methodsFor: 'unclassified' stamp: 'MS 10/18/2021 15:16:30'!
mainAncestors! !
!Portfolio methodsFor: 'unclassified' stamp: 'MS 10/18/2021 15:18:12' prior: 50930550!
mainAncestors
	
	|mainAncestors|
	
	self isRoot ifTrue: [^OrderedCollection with: self].
	
	mainAncestors := OrderedCollection new.
	ancestors do: [:ancestor | mainAncestors addAll: ancestor mainAncestors].
	^mainAncestors.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:18:52'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:18:52'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:18:52'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:18:57'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:18:57'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:22:44'!
aPortfolioIsaDescendant: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:23:55' prior: 50930160!
addPortfolio: aPortfolio

	(self aPortfolioIsaDescendant: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:23:57' prior: 50930656!
addPortfolio: aPortfolio

	(self aPortfolioIsaDescendant: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:24:00' prior: 50930672!
addPortfolio: aPortfolio

	(self aPortfolioIsADescendant: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:24:06'!
aPortfolioIsADescendant: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
! !

!methodRemoval: Portfolio #aPortfolioIsaDescendant: stamp: 'MS 10/18/2021 15:24:06'!
aPortfolioIsaDescendant: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:24:36' prior: 50930688!
addPortfolio: aPortfolio

	(self aPortfolioIsADescendant: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(ancestors anySatisfy: [:aPortfolioAncestor| aPortfolioAncestor = aPortfolio ]) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:29:53'!
aPortfolioIsAnAncestor: aPortfolio
	(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolioAncestor aPortfolioIsADescendant: aPortfolioAncestor ]) 
			ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:29:56'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:29:56'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:29:56'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:30:26' prior: 50930721!
addPortfolio: aPortfolio

	(self aPortfolioIsADescendant: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:30:28'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:30:28'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:30:41'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:30:41'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:31:53'!
isAnAncestorOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 15:31:53' prior: 50930824!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!methodRemoval: Portfolio #aPortfolioIsADescendant: stamp: 'MS 10/18/2021 15:31:53'!
aPortfolioIsADescendant: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:32:04' prior: 50930740!
aPortfolioIsAnAncestor: aPortfolio
	(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolioAncestor isAnAncestorOf: aPortfolioAncestor ]) 
			ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:32:06'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:32:06'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:32:10'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:32:10'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:32:41' prior: 50930950!
aPortfolioIsAnAncestor: aPortfolio
	(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolioAncestor isAnAncestorOf: aPortfolio ]) 
			ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:32:44'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:32:44'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:32:44'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:36:53'!
isAParentOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 15:36:53' prior: 50930927!
addPortfolio: aPortfolio

	(self isAParentOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!methodRemoval: Portfolio #isAnAncestorOf: stamp: 'MS 10/18/2021 15:36:53'!
isAnAncestorOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	self = aPortfolio ifTrue: [^true].
	^false.
!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:37:37'!
isAnAncestorOf: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAParentOf: aPortfolio ]) 
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:37:41' prior: 50931154!
isAnAncestorOf: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAParentOf: aPortfolio ]).
	! !

!methodRemoval: Portfolio #assertCanBeAdded: stamp: 'MS 10/18/2021 15:37:48'!
assertCanBeAdded: aPorfolioEntry

	
	
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:37:58'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:37:58'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:37:58'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:38:25' prior: 50931133!
addPortfolio: aPortfolio

	(self isAnAncestorOf:aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:38:26' prior: 50931246!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:40:47'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:40:47'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:40:47'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:40:55'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:40:55'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:41:59'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:41:59'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:42:51' prior: 50931041!
aPortfolioIsAnAncestor: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolioAncestor isAnAncestorOf: aPortfolio ]) 
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:42:53'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:42:53'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:42:53'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:42:53'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:42:53'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:42:53'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:43:03'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:43:03'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:43:41' prior: 50931260!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:44:55' prior: 50931124!
isAParentOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	^false.
! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:45:11' prior: 50931449!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self = aPortfolio ifTrue: [^true].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:45:13'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:45:13'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:45:13'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:45:13'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:45:13'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:45:13'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:45:13'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:45:22'!
FAILURE!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:45:22'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:45:54' prior: 50931471!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:45:56'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:45:56'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:45:56'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:45:56'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:45:56'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:45:56'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:46:02'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:46:02'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:47:51' prior: 50931162!
isAnAncestorOf: aPortfolio
	
	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]).
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:47:53'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:47:53'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:47:53'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:47:53'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:47:53'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:49:57'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:49:57'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:49:57'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:49:57'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:49:57'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:50:14'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:50:14'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:51:47'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:51:47'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:51:47'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:51:47'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:51:47'!
FAILURE!

parentPortfolio!

childPortfolio!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:55:37' prior: 50931361!
aPortfolioIsAnAncestor: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolio ]) 
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:55:47' prior: 50931901!
aPortfolioIsAnAncestor: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 15:56:59'!
cannotBeAddedTo: aPortfolio
	^(aPortfolio isAnAncestorOf: self) or: 
		[ portfoliosEntries anySatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:57:01'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 15:57:01'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 15:57:01'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 15:57:01'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 15:57:01'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:57:14'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:57:14'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 15:57:55'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:03:28' prior: 50931566!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self aPortfolioIsAnAncestor: aPortfolio.
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:03:30'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:03:30'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:03:30'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:03:30'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:03:30'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:03:30'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:03:30'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:04:07' prior: 50931909!
aPortfolioIsAnAncestor: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:04:22' prior: 50932010!
addPortfolio: aPortfolio

	(self isAnAncestorOf: aPortfolio ) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	(self aPortfolioIsAnAncestor: aPortfolio) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:05:59' prior: 50931663!
isAnAncestorOf: aPortfolio

	(aPortfolio = self) ifTrue: [^true].
	
	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]).
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:07:31' prior: 50932123!
isAnAncestorOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]).
	(aPortfolio = self) ifTrue: [^true].
	^false.
	
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:07:33'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:07:33'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:07:33'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:07:33'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:07:33'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:07:33'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:07:42'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:07:42'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:08:07'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:08:19'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:08:48'!
ERROR!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:09:09'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'MS 10/18/2021 16:10:08'!
cannotBeAddedTo:aPortfolio

	^aPortfolio has: self.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:10:10'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:10:10'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:10:10'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:10:10'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:10:31'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:10:31'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'MS 10/18/2021 16:12:13'!
isAnAncestor
! !

!methodRemoval: ReceptiveAccount #isAnAncestor stamp: 'MS 10/18/2021 16:12:24'!
isAnAncestor
!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'MS 10/18/2021 16:12:30'!
isAnAncestorOf: aPortfolio

	^false.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:12:32'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:12:32'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:12:32'!
FAILURE!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:14:05'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:14:24' prior: 50932106!
addPortfolio: aPortfolio

	(self aPortfolioIsAnAncestor: aPortfolio) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].
	self = aPortfolio ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:14:25'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:14:25'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:14:25'!
FAILURE!

!methodRemoval: Portfolio #isAParentOf: stamp: 'MS 10/18/2021 16:16:06'!
isAParentOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry = aPortfolio ]) ifTrue: [^true].
	^false.
!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:18:21' prior: 50932135!
isAnAncestorOf: aPortfolio

	(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]) ifTrue: [^true].
	(aPortfolio = self) ifTrue: [^true].
	^false.
	
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:18:23'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:18:23'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:19:01' prior: 50932414!
addPortfolio: aPortfolio

	(self aPortfolioIsAnAncestor: aPortfolio) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:19:03'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:19:03'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:20:27' prior: 50932511!
isAnAncestorOf: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]) 
		or: [	(aPortfolio = self)].
	
	
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:28:44'!
assertThatPortfolioCanBeAdded: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 16:28:44' prior: 50932594!
addPortfolio: aPortfolio

	(self assertThatPortfolioCanBeAdded: aPortfolio) ifTrue: [self error: Portfolio portfolioIsAlreadyInHierarchyErrorDescription ].


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!methodRemoval: Portfolio #aPortfolioIsAnAncestor: stamp: 'MS 10/18/2021 16:28:44'!
aPortfolioIsAnAncestor: aPortfolio
	^(self mainAncestors anySatisfy: 
		[:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
	!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:28:46'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:28:46'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:30:20' prior: 50932685!
assertThatPortfolioCanBeAdded: aPortfolio
	(self mainAncestors anySatisfy: [:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
		ifTrue: [self error: self class portfolioIsAlreadyInHierarchyErrorDescription ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:30:22'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:30:22'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:31:07'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:31:07'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:31:08'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:31:08'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:31:08'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:31:29' prior: 50932693!
addPortfolio: aPortfolio

	self assertThatPortfolioCanBeAdded: aPortfolio.


	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:31:30'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:31:30'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:31:40' prior: 50932940!
addPortfolio: aPortfolio

	self assertThatPortfolioCanBeAdded: aPortfolio.

	aPortfolio addAncestor: self.
	portfoliosEntries add: aPortfolio.! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:32:40' prior: 50932784!
assertThatPortfolioCanBeAdded: aPortfolio
	(self mainAncestors allSatisfy: [:aPortfolioAncestor| aPortfolio canBeAddedTo: aPortfolioAncestor ]) 
		ifTrue: [self error: self class portfolioIsAlreadyInHierarchyErrorDescription ].
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:32:50' prior: 50933029!
assertThatPortfolioCanBeAdded: aPortfolio
	(self mainAncestors allSatisfy: [:aPortfolioAncestor| aPortfolio canBeAddedTo: aPortfolioAncestor ]) 
		ifFalse: [self error: self class portfolioIsAlreadyInHierarchyErrorDescription ].
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:32:59'!
canBeAddedTo: aPortfolio
	^(aPortfolio isAnAncestorOf: self) or: 
		[ portfoliosEntries anySatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 16:32:59' prior: 50933050!
canBeAddedTo: aPortfolio
	^(aPortfolio isAnAncestorOf: self) or: 
		[ portfoliosEntries anySatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !

!methodRemoval: Portfolio #cannotBeAddedTo: stamp: 'MS 10/18/2021 16:32:59'!
cannotBeAddedTo: aPortfolio
	^(aPortfolio isAnAncestorOf: self) or: 
		[ portfoliosEntries anySatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:34:08' prior: 50933059!
canBeAddedTo: aPortfolio
	^(aPortfolio isAnAncestorOf: self ) or: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:36:10' prior: 50933076!
canBeAddedTo: aPortfolio
	^((aPortfolio isAnAncestorOf: self) not ) or: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:36:11'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:36:11'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:36:11'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:36:11'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:36:11'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:36:56' prior: 50933085!
canBeAddedTo: aPortfolio
	^((aPortfolio isAnAncestorOf: self) not ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:36:58'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:36:58'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:36:58'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:36:58'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:36:58'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:36:58'!
PASSED!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:38:32'!
hasThePortfolio: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]) 
		or: [	(aPortfolio = self)].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 16:38:32' prior: 50933167!
canBeAddedTo: aPortfolio
	^((aPortfolio hasThePortfolio: self) not ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 16:38:32' prior: 50933249!
hasThePortfolio: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]) 
		or: [	(aPortfolio = self)].
	
	
	! !

!methodRemoval: Portfolio #isAnAncestorOf: stamp: 'MS 10/18/2021 16:38:32'!
isAnAncestorOf: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry isAnAncestorOf: aPortfolio ]) 
		or: [	(aPortfolio = self)].
	
	
	!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:39:20'!
ERROR!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
ERROR!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:39:20'!
ERROR!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:39:20'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:39:20'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:39:20'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:39:20'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:39:20'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:39:20'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:30:20' prior: 50933040!
assertThatPortfolioCanBeAdded: aPortfolio
	(self mainAncestors anySatisfy: [:aPortfolioAncestor| aPortfolio cannotBeAddedTo: aPortfolioAncestor ]) 
		ifTrue: [self error: self class portfolioIsAlreadyInHierarchyErrorDescription ].
	! !
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:41:20'!
cannotBeAddedTo: aPortfolio
	^((aPortfolio hasThePortfolio: self) not ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MS 10/18/2021 16:41:20' prior: 50933367!
cannotBeAddedTo: aPortfolio
	^((aPortfolio hasThePortfolio: self) not ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	! !

!methodRemoval: Portfolio #canBeAddedTo: stamp: 'MS 10/18/2021 16:41:20'!
canBeAddedTo: aPortfolio
	^((aPortfolio hasThePortfolio: self) not ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService canBeAddedTo: aPortfolio] ].
	!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:41:37' prior: 50933376!
cannotBeAddedTo: aPortfolio
	^(aPortfolio hasThePortfolio: self ) and: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:41:47'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:41:47'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:41:47'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:41:47'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:41:47'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:41:47'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:42:41'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:42:41'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:42:41'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:42:41'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:42:41'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:42:41'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:44:19' prior: 50933393!
cannotBeAddedTo: aPortfolio
	^(aPortfolio hasThePortfolio: self ) or: 
		[ portfoliosEntries allSatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:44:22'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:44:22'!
ERROR!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:44:22'!
ERROR!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:44:22'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:44:22'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:44:22'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:44:22'!
ERROR!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:44:49' prior: 50933548!
cannotBeAddedTo: aPortfolio
	^(aPortfolio hasThePortfolio: self ) or: 
		[ portfoliosEntries anySatisfy: [ :portfolioService | portfolioService cannotBeAddedTo: aPortfolio] ].
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:44:51'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:44:51'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:44:51'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:44:51'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:44:51'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:44:51'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:45:51'!
FAILURE!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:45:51'!
FAILURE!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:45:51'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:45:51'!
ERROR!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:45:51'!
ERROR!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:45:51'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:45:57'!
ERROR!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:45:57'!
ERROR!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:47:01'!
FAILURE!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:47:01'!
FAILURE!
!Portfolio methodsFor: 'addingAccountsOrPortfolios' stamp: 'MS 10/18/2021 16:48:40' prior: 50933267!
hasThePortfolio: aPortfolio

	^(portfoliosEntries anySatisfy: [:aPortfolioEntry| aPortfolioEntry hasThePortfolio: aPortfolio ]) 
		or: [	(aPortfolio = self)].
	
	
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'MS 10/18/2021 16:48:50'!
hasThePortfolio: aPortfolio

	^false.! !

!methodRemoval: ReceptiveAccount #isAnAncestorOf: stamp: 'MS 10/18/2021 16:48:50'!
isAnAncestorOf: aPortfolio

	^false.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasCeroBalance stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test02emptyPortfolioHasNoTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test03aPortfolioWithOneAccountHasItsBalance stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test04aPortfolioWithOneAccountHasItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test05aPortfolioWithOneAccountHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test06portfolioWithMultipleAccountsHasItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test07portfolioWithMultipleAccountsHasRegisteredItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test08aPortfolioWithMultipleAccountsHasItsBalance stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test09cannontAddTheSameAccountToAPortfolioTwice stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test10AnAccountCanBeInTwoPortfolios stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test11aPortfolioWithOnePortfolioHasItsBalance stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test12aPortfolioWithOnePortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test13aPortfolioWithOnePortfolioHasItsTransactionsRegistered stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioCannotAddItself stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test15AChildPortfolioCannotAddItsParent stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddAChildPortfolioTwiceToTheSameParentPortfolio stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test17AChildPortfolioCanBeInTwoParentPortfolios stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test18portfolioWithPortfolioWithPortfolioSumsTheirBalance stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test19portfolioWithPortfolioWithPortfolioHasItsTransactions stamp: 'MS 10/18/2021 16:48:52'!
PASSED!

!testRun: #PortfolioTest #test20aPortfolioCannotAddItsGrandfather stamp: 'MS 10/18/2021 16:48:52'!
PASSED!